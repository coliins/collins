library(shiny)
library(leaflet)
library(ggplot2)
ui <- fluidPage(theme = shinythemes::shinytheme("darkly"),#themes available "sandstone",'unite","darkly","flatly")
                titlePanel("collins dashboard"),
                sidebarLayout(
                    sidebarPanel(
                        textOutput("greeting"),
                        textInput("name", "What's your name?"),
                        passwordInput("password", "What's your password?"),
                        textAreaInput("story", "which county do you support", rows = 3),
                        h3("Slider changes number of points"),
                        sliderInput(inputId = "myslider", "Number of points:",
                                    min = 5, max = 20, value = 10, step = 1),
                        plotOutput("plot", height = 250,
                                   brush = brushOpts(id = "plot_brush", resetOnNew = TRUE,
                                                     fill = "red", stroke = "#036", opacity = 0.3)),
                        h4("Brushed points appear here"),
                        tableOutput("table_brushedpoints"),
                        dateInput("dob", "When were you born?"),
                        dateRangeInput("holiday", "When do you want to go on vacation next?"),
                        selectInput(
                            "county", "What's your favourite stete?", state.name,
                            multiple = TRUE)),
                    mainPanel(
                        tabsetPanel(
                            tabPanel("Map", leafletOutput("mymap")),
                            textOutput("text"),#must be coupled by render function at the server i,e all outputs for regular text
                            verbatimTextOutput("code"),#must be coupled with render function at the server i.e all outputs for console code
                            dataTableOutput("dynamic")))
                )
)
server <- function(input, output, session) {
    dat<-reactive({
        long <- runif(input$myslider, -121, -77 )
        lat <- runif(input$myslider, 33, 48)
        val1 <- runif(input$myslider, 1, 50)
        val2 <- rnorm(input$myslider, 1, 50)
        data.frame(latitude = lat, longitude = long, val1, val2)
    })
    
    br <- reactive({
        brushedPoints(dat(), input$plot_brush)
    })
    
    output$plot <- renderPlot({
        ggplot(dat(), aes(val1, val2, color=val2)) + geom_point() +
            ggtitle("Select points by brushing graph")
    })
    
    output$mymap <- renderLeaflet({
        
        # if nothing has been selected use the data itself, otherwise
        # use a brushed version
        ifelse(is.null(input$plot_brush), dat <- dat(), dat <- br() )
        
        leaflet(data = dat) %>%
            addProviderTiles("CartoDB.Positron",
                             options = providerTileOptions(noWrap = TRUE)) %>%
            addMarkers(~longitude, ~latitude) %>%
            setView(-98, 38.6, zoom=3)
    })
    
    output$table_brushedpoints <- renderTable({
        br()[,c("val1", "val2")]
    })
    output$text <- renderText("Descriptive!")
    output$code <- renderPrint(summary(mtcars))
    output$dynamic <- renderDataTable(mtcars, options = list(pageLength = 5))
    output$greeting <- renderText({
        paste0("Hello ", input$name, "!")
    })
}
shinyApp(ui, server)
